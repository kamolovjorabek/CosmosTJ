version: '2'

services:
  web:
    build: 
      context: .
    container_name: management_app
    restart: always
    volumes:
      - .:/app
      - static_volume:/app/static
      - staticfiles_volume:/app/staticfiles
    ports:
      - "8001:8000"
    env_file:
      - ./.env
    depends_on:
      - db
    environment:
      - VIRUAL_HOST=${ALLOWED_HOST}
      - LETSENCRYPT_HOST=${ALLOWED_HOST}
    command: ["sh", "./start.sh"]

  db:
    image: postgres
    volumes:
      - ./postgres/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: clientsdb
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: 9140656
      
  nginx:
    build:
      dockerfile: ./dockerfile
      context: ./docker/nginx/
    container_name: backend_nginx
    image: backend_nginx
    volumes:
      - static_volume:/app/static
      - staticfiles_volume:/app/staticfiles
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - db
    ports:
      - "${NGINX_EXTERN_PORT}:80"
      - "${NGINX_EXTERN_SSL_PORT}:443"
  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: app_acme_companion
    volumes_form:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
volumes:
  static_volume:
  staticfiles_volume:
  certs:
  vhost:
  html:
  acme:

